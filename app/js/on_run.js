function OnRun($rootScope, $stateParams, AppSettings, $uibModal, $log, $cookies, $http, $state) {  'ngInject';  $rootScope.pageRendered = false;  //change page title based on state  $rootScope.$on('$stateChangeSuccess', (event, toState) => {    $rootScope.pageTitle = '';    $rootScope.pageClass = '';    if (toState.title) {      $rootScope.pageTitle += toState.title;      $rootScope.pageTitle += ' \u2014 ';    }    if (toState.class) {      $rootScope.pageClass += toState.class;    }    $rootScope.pageTitle += AppSettings.appTitle;  });  $rootScope.apiUrl = AppSettings.apiUrl;  $rootScope.imageUrl = AppSettings.imageUrl;  $rootScope.rootUserEmail = AppSettings.rootUserEmail;  $rootScope.rootUserId = AppSettings.rootUserId;  $rootScope.userLoggedIn = false;  if ($cookies.get('auth_key')) {    $rootScope.authToken = $cookies.get('auth_key');    $rootScope.userLoggedIn = true;  }  if ($rootScope.userLoggedIn) {    // Get logged in user name    $http.get($rootScope.apiUrl + 'users/one?_auth_key=' + $rootScope.authToken)      .then(function successCallback(response) {        $rootScope.userProfile = response.data.data.profile;        $rootScope.userId = response.data.data.id;        $rootScope.pageRendered = true;      }, function errorCallback(response) {});  } else {    $rootScope.pageRendered = true;  }  $rootScope.SignUpModal = function(size) {    var modalInstance = $uibModal.open({      templateUrl: 'modals/signup.html',      controller: ['$scope', '$uibModalInstance', '$http', '$rootScope', SignUpCtrl],      size: size    });  };  $rootScope.SignInModal = function(size) {    var modalInstance = $uibModal.open({      templateUrl: 'modals/signin.html',      controller: ['$scope', '$uibModalInstance', '$http', '$rootScope', '$cookies', '$log', '$state', SignInCtrl],      size: size    });  };  function SignUpCtrl($scope, $uibModalInstance, $http, $rootScope) {    // Create user    $scope.SignUpForm = function() {      $scope.isSubmitting = true;      $scope.formError = false;      $scope.formErrorData = [""];      var signUpData = {        'firstName': $scope.firstname,        'lastName': $scope.lastname,        'email': $scope.email,        'password': $scope.password      };      $http.post($rootScope.apiUrl + 'users/create', signUpData)        .then(function successCallback(response) {          if (response.data.errors[0]) {            // Log the response            $log.error('errors', response);            $scope.isSubmitting = false;            $scope.formError = true;            $scope.formErrorData = response.data.errors;          }          if (response.data.result == 1) {            $uibModalInstance.close();            $scope.isSubmitting = false;            $rootScope.alert = true;            $rootScope.alertMessage = 'Thank you for signing up, please verify your email address';            $rootScope.alertResponse = 'alert-success';          }        }, function errorCallback(response) {          // Log the response          $log.error('error', response);          $scope.isSubmitting = false;          $scope.formError = true;          $scope.formErrorData = ['Sorry there seems to be something wrong on our end, please try again...'];        });    };    $scope.LoginSwitch = function() {      $uibModalInstance.close();      setTimeout(function(){        $rootScope.SignInModal('sm');      }, 200);    };  }  function SignInCtrl($scope, $uibModalInstance, $http, $rootScope, $cookies, $log, $state) {    // Create user    $scope.SignInForm = function() {      var signInData = {        'email': $scope.email,        'password': $scope.password      };      $http.post($rootScope.apiUrl + 'users/login', signInData).success((data) => {        if (data.result === 0) {          $scope.formDone = false;        } else {          $scope.formDone = true;        }        var authKey = data.data.auth_key;        $rootScope.userLoggedIn = true;        $cookies.put('auth_key', authKey);        $rootScope.authToken = $cookies.get('auth_key');        // Get logged in user name        $http.get($rootScope.apiUrl + 'users/one?_auth_key=' + $rootScope.authToken)          .then(function successCallback(response) {            $rootScope.userProfile = response.data.data.profile;          }, function errorCallback(response) {});        $state.reload();        $scope.formSent = true;      }).error((err, status) => {        $scope.formSent = true;      });    };  }  // Log out  $rootScope.logOut = function() {    $cookies.remove('auth_key');    $rootScope.authToken = "";    $rootScope.userLoggedIn = false;    $rootScope.userProfile = "";    $state.reload();  }}export default OnRun;